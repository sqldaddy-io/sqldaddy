version: "3.8"
services:
  backend:
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    tty: true
    volumes:
      - ./../backend/:/var/www
      - "./php-fpm/conf/supervisord.conf:/etc/supervisor/supervisord.conf"
      - "./php-fpm/conf/supervisord-programs.conf:/etc/supervisor/conf.d/app.conf"
    networks:
      - app-network

  mercure:
    container_name: mercure
    image: dunglas/mercure
    restart: unless-stopped
    tty: true
    environment:
      SERVER_NAME: ':3000'
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY}
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins *
        anonymous 1
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    ports:
      - "3000:3000"
    networks:
      - app-network

  frontend:
    stdin_open: true
    container_name: frontend
    build:
      context: ./../frontend
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./../frontend:/var/www
    networks:
      - app-network

  #Nginx Service
  webserver:
    depends_on:
      - backend
      - mercure
      - frontend
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./../backend/:/var/www
      - ./certs:/etc/nginx/certs
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

  postgresmain:
    image: postgres:14-alpine
    container_name: postgresmain
    restart: unless-stopped
    ports:
      - "51998:5432"
    volumes:
      - ./../database/main:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: ${MAIN_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MAIN_POSTGRES_PASSWORD}
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  mercure_data:
  mercure_config:
  db_data:
